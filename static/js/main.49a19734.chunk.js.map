{"version":3,"sources":["components/Form.js","components/FilterButton.js","components/Todo.js","App.js","index.js"],"names":["Form","props","useState","name","setName","onSubmit","e","preventDefault","className","htmlFor","type","id","autoComplete","value","onChange","target","FilterButton","aria-pressed","isPressed","onClick","setFilter","Todo","isEditing","setEditing","newName","setNewName","editingTemplate","editTask","viewTemplate","defaultChecked","completed","toggleTaskCompleted","deleteTask","FILTER_MAP","All","Active","task","Completed","FILTER_NAMES","Object","keys","App","tasks","setTasks","filter","editedTaskList","map","updatedTasks","remainingTasks","taskList","filterList","headingText","length","newTask","nanoid","role","aria-labelledby","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.49a19734.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction Form(props) {\r\n    \r\n    const [name, setName] = useState('Add A Task')\r\n\r\n    \r\n    function handleChange(e) {\r\n        setName(e.target.value)\r\n    }\r\n    \r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        props.onSubmit(name);\r\n        setName('');\r\n      }\r\n    \r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n        <h2 className=\"label-wrapper\">\r\n          <label htmlFor=\"new-todo-input\" className=\"label__lg\">\r\n            What needs to be done?\r\n          </label>\r\n        </h2>\r\n        <input\r\n          type=\"text\"\r\n          id=\"new-todo-input\"\r\n          className=\"input input__lg\"\r\n          name=\"text\"\r\n          autoComplete=\"off\"\r\n          value={name}\r\n          onChange={handleChange}\r\n        />\r\n        <button type=\"submit\" className=\"btn btn__primary btn__lg\">\r\n          Add\r\n        </button>\r\n      </form>\r\n    );\r\n}\r\n\r\n\r\nexport default Form;","import React from \"react\";\r\n\r\nfunction FilterButton(props) {\r\n  return (\r\n    <button \r\n    type=\"button\" \r\n    className=\"btn toggle-btn\" \r\n    aria-pressed={props.isPressed}\r\n    onClick={() => props.setFilter(props.name)}\r\n    >\r\n      <span className=\"visually-hidden\">Show </span>\r\n      <span>{props.name} </span>\r\n      <span className=\"visually-hidden\"> tasks</span>\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default FilterButton;","import React, { useState } from \"react\";\r\n\r\nexport default function Todo(props) {\r\n  \r\n  const [isEditing, setEditing] = useState(false);\r\n  const [newName, setNewName] = useState('');\r\n\r\n  function handleChange(e) {\r\n    setNewName(e.target.value);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    props.editTask(props.id, newName);\r\n    setNewName('');\r\n    setEditing(false);\r\n  }\r\n\r\n  const editingTemplate = (\r\n    <form className=\"stack-small\" onSubmit={handleSubmit}>\r\n      <div className=\"form-group\">\r\n        <label className=\"todo-label\" htmlFor={props.id}>\r\n          New name for {props.name}\r\n        </label>\r\n        <input id={props.id} className=\"todo-text\" type=\"text\" value={newName} onChange={handleChange} />\r\n      </div>\r\n      <div className=\"btn-group\">\r\n        <button type=\"button\" className=\"btn todo-cancel\" onClick={() => setEditing(false)}>\r\n          Cancel\r\n          <span className=\"visually-hidden\">renaming {props.name}</span>\r\n        </button>\r\n        <button type=\"submit\" className=\"btn btn__primary todo-edit\">\r\n          Save\r\n          <span className=\"visually-hidden\">new name for {props.name}</span>\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n  const viewTemplate = (\r\n    <div className=\"stack-small\">\r\n      <div className=\"c-cb\">\r\n          <input\r\n            id={props.id}\r\n            type=\"checkbox\"\r\n            defaultChecked={props.completed}\r\n            onChange={() => props.toggleTaskCompleted(props.id)}\r\n          />\r\n          <label className=\"todo-label\" htmlFor={props.id}>\r\n            {props.name}\r\n          </label>\r\n        </div>\r\n        <div className=\"btn-group\">\r\n          <button type=\"button\" className=\"btn\" onClick={() => setEditing(true)}>\r\n            Edit <span className=\"visually-hidden\">{props.name}</span>\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn__danger\"\r\n            onClick={() => props.deleteTask(props.id)}\r\n          >\r\n            Delete <span className=\"visually-hidden\">{props.name}</span>\r\n          </button>\r\n        </div>\r\n    </div>\r\n  );\r\n\r\n\r\n  return (\r\n    <li className=\"todo\">{isEditing ? editingTemplate : viewTemplate}</li>\r\n    );\r\n  }","import React, { useState } from \"react\";\nimport Form from \"./components/Form\";\nimport FilterButton from \"./components/FilterButton\";\nimport Todo from \"./components/Todo\";\nimport { nanoid } from \"nanoid\";\n\n\nconst FILTER_MAP = {\n  All: () => true,\n  Active: task => !task.completed,\n  Completed: task => task.completed\n};\n\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\n\nfunction App(props) {\n  \n  const [tasks, setTasks] = useState(props.tasks);\n  const [filter, setFilter] = useState('All');\n\n\n\n  function addTask(name) {\n    const newTask = { id: \"todo-\" + nanoid(), name: name, completed: false };\n    setTasks([...tasks, newTask]);\n  }\n\n\n  function editTask(id,newName) {\n    const editedTaskList = tasks.map(task => {\n      if (id === task.id) {\n        return {...task, name: newName}\n      }\n      return task;\n    });\n    setTasks(editedTaskList);\n  }\n\n\n  function toggleTaskCompleted(id) {\n    const updatedTasks = tasks.map(task => {\n      // if this task has the same ID as the edited task\n      if (id === task.id) {\n        // use object spread to make a new object\n        // whose `completed` prop has been inverted\n        return {...task, completed: !task.completed}\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  }\n\n  function deleteTask(id) {\n    const remainingTasks = tasks.filter(task => id !== task.id);\n    setTasks(remainingTasks);\n  }\n\n  const taskList = tasks\n  .filter(FILTER_MAP[filter])\n  .map(task => (\n    <Todo\n      id={task.id}\n      name={task.name}\n      completed={task.completed}\n      key={task.id}\n      toggleTaskCompleted={toggleTaskCompleted}\n      deleteTask={deleteTask}\n      editTask={editTask}\n    />\n  )\n); \n\nconst filterList = FILTER_NAMES.map(name => (\n  <FilterButton \n  key={name} \n  name={name}\n  isPressed={name === filter}\n  setFilter={setFilter}\n  />\n));\n\nconst headingText = `${taskList.length} tasks remaining`;\n\n  return (\n    <div className=\"todoapp stack-large\">\n      <h1>To Do List</h1>\n      <Form onSubmit={addTask}/>\n      <div className=\"filters btn-group stack-exception\">\n        {filterList}\n      </div>\n      <h2 id=\"list-heading\">\n      {headingText}\n      </h2>\n      <ul\n        role=\"list\"\n        className=\"todo-list stack-large stack-exception\"\n        aria-labelledby=\"list-heading\"\n      >\n        <ul\n  role=\"list\"\n  className=\"todo-list stack-large stack-exception\"\n  aria-labelledby=\"list-heading\"\n>\n{taskList}\n        </ul>\n      </ul>\n    </div>\n  );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nconst DATA = [\n  { id: \"todo-0\", name: \"To-Do List\", completed: true },\n  { id: \"todo-1\", name: \"Portfolio Page\", completed: false },\n  { id: \"todo-2\", name: \"Weather Forecast App\", completed: false },\n  { id: \"todo-3\", name: \"Valorant Tactical Maps\", completed: false },\n  { id: \"todo-4\", name: \"Frontend/Backend\", completed: false }\n];\n\n\nReactDOM.render(<App tasks={DATA} />, document.getElementById(\"root\"));\n\n\n\n"],"sourceRoot":""}